Introduction
============

.. currentmodule:: hypergol

The structure of Hypergol is organised around two functions: Core functionalities that enable running Hypergol projects and code generating scripts that generate those projects.

Hypergol Data Model
-------------------

Hypergol project's domain data model is described by a set of classes that all derive from :class:`BaseData`. This provides the basic functionalities that enable the class to interoperate with the rest of the framework. The classes can be easily generated by :func:`create_data_model` then further modified. Automated tests are generated as well that check if the class still serialises properly after modification. Data model classes recursively serialise into json and stored in gzipped text files which are organised into datasets.

Datasets
--------

The :class:`Dataset` object is the primary storage format in Hypergol. It enable parallel processing by the pipeline and also interactive access from notebooks. The circumstances of the creation of the file is saved into the `.def` file: the location of the file, the type of data stored in it, the git commit and commiter. The gzipped JSON files content (before compression) is hashed with SHA1 which is then saved into ``.chk`` file so it can be verified that the file wasn't changed. The dataset's own checksum is calculated by hashing the entire ``.chk`` file with SHA1, as this contains the hash of all the files in the dataset it uniquely verifies the dataset. No part of it can be changed and have the same hash. If another dataset is used in the creation of the dataset (as in a pipeline) the hash of that dataset is added to the ``.def`` file, whose hash is added to the ``.chk`` file whose hash is added to the further downstream dataset's ``.def`` file. This way the entire processing is verified by a single hash.




`Dataset <classes.html#dataset-class-for-storing-domain-objects>`__,

This is another cool topic, write here about the interoperation of classes in dataset.py.

Here is a bunch of link (the first works, get permalink where you want to link and cut the beginning)
`Dataset <classes.html#dataset-class-for-storing-domain-objects>`__,

Tasks
-----

There are three types of tasks: :class:`Source`, :class:`SimpleTask`, :class:`Task`.
